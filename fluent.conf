# Prevent fluentd from handling records containing its own logs. Otherwise
# it can lead to an infinite loop, when error in sending one message generates
# another message which also fails to be sent and so on.
<match fluent.**>
  type null
</match>

<source>
  type tail
  format json
  time_key time
  path /var/log/containers/*.log
  pos_file fluentd-docker.pos
  time_format %Y-%m-%dT%H:%M:%S.%N%Z
  read_from_head true
  tag reform.*
</source>

<filter reform.**>
  type parser
  format /^(?<severity>\w)(?<time>\d{4} [^\s]*)\s+(?<pid>\d+)\s+(?<source>[^ \]]+)\] (?<log>.*)/
  reserve_data true
  suppress_parse_error_log true
  key_name log
</filter>

<match reform.**>
  type record_reformer
  enable_ruby true
  tag raw.kubernetes.${tag_suffix[4].split('-')[0..-2].join('-')}
</match>

# Detect exceptions in the log output and forward them as one log entry.
<match raw.kubernetes.**>
  type detect_exceptions
  remove_tag_prefix raw
  message log
  stream stream
  multiline_flush_interval 5
  max_bytes 500000
</match>

<filter kubernetes.**>
  type kubernetes_metadata
</filter>

<match **>
  type http_ext
  endpoint_url          "#{ENV['SUMOLOGIC_URL']}"
  serializer            json                                 # default: form
  open_timeout          5                                    # default: nil = no timeout
  read_timeout          10                                   # default: 60
  raise_on_error        false                                # default: true
  raise_on_http_failure true                                 # default: false
  ignore_http_status_code 300,400..499                       # default: nil # do not raise on these http_hstatus codes
  use_ssl               true                                 # default: false
</match>
